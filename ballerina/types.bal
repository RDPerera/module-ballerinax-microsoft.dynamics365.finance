// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/http;

# Represents the Queries record for the operation: getPaymentJournalLineSettledInvoicesCrossCompany
public type GetPaymentJournalLineSettledInvoicesCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getCustomersV3CrossCompanyCount
public type GetCustomersV3CrossCompanyCountQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getVendorGroupsCrossCompanyCount
public type GetVendorGroupsCrossCompanyCountQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getCustomerInvoiceJournalLineCrossCompany
public type GetCustomerInvoiceJournalLineCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getFinancialDimensionValuesRetailChannel
public type GetFinancialDimensionValuesRetailChannelQueries record {
    @http:Query {name: "$filter"}
    string filter?;
};

# Represents the Queries record for the operation: getVendorsV2CrossCompanyCount
public type GetVendorsV2CrossCompanyCountQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getCustomerGroupsCrossCompany
public type GetCustomerGroupsCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getCustomerInvoiceJournalHeaderCrossCompany
public type GetCustomerInvoiceJournalHeaderCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getCustomerPaymentJournalHeadersCrossCompany
public type GetCustomerPaymentJournalHeadersCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getExchangeRatesRateType01092023
public type GetExchangeRatesRateType01092023Queries record {
    @http:Query {name: "$filter"}
    string filter?;
};

# Represents the Queries record for the operation: getFreeTextInvoiceLinesCrossCompany
public type GetFreeTextInvoiceLinesCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getReleasedProductsCrossCompanyCount
public type GetReleasedProductsCrossCompanyCountQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getCustomersV3FieldListCrossCompanyGbsiUssi
public type GetCustomersV3FieldListCrossCompanyGbsiUssiQueries record {
    @http:Query {name: "$filter"}
    string filter?;
    @http:Query {name: "cross-company"}
    string crossCompany?;
    @http:Query {name: "$select"}
    string selectFields?;
};

# Represents the Queries record for the operation: getExpenseJournalLinesCrossCompany
public type GetExpenseJournalLinesCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getCustomerPaymentJournalLinesCrossCompany
public type GetCustomerPaymentJournalLinesCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getReleasedProductsFieldListCrossCompanyJ00029
public type GetReleasedProductsFieldListCrossCompanyJ00029Queries record {
    @http:Query {name: "$filter"}
    string filter?;
    @http:Query {name: "cross-company"}
    string crossCompany?;
    @http:Query {name: "$select"}
    string selectFields?;
};

# Represents the Queries record for the operation: getFreeTextInvoiceHeadersCrossCompany
public type GetFreeTextInvoiceHeadersCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getVendorGroupsCrossCompanyAll
public type GetVendorGroupsCrossCompanyAllQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Represents the Queries record for the operation: getExpenseJournalHeadersCrossCompany
public type GetExpenseJournalHeadersCrossCompanyQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

# Represents the Queries record for the operation: getVendorsV2CrossCompanyAll
public type GetVendorsV2CrossCompanyAllQueries record {
    @http:Query {name: "cross-company"}
    string crossCompany?;
};
